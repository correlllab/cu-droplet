#include "droplet_init.h"

void init();
void loop();
void handle_msg(ir_msg* msg_struct);

void calc_calib_matrix();

#define NUM_CALIB_MEAS 130

static const uint8_t known_calib_vals[NUM_CALIB_MEAS][3] = {
	{255,0,0},
	{191,0,0},
	{127,0,0},
	{64,0,0},
	{0,255,0},
	{0,191,0},
	{0,127,0},
	{0,64,0},
	{0,0,255},
	{0,0,191},
	{0,0,127},
	{0,0,64},
	{0,255,255},
	{0,191,191},
	{0,127,127},
	{0,64,64},
	{255,0,255},
	{191,0,191},
	{127,0,127},
	{64,0,64},
	{255,255,0},
	{191,191,0},
	{127,127,0},
	{64,64,0},
	{0,255,191},
	{0,255,127},
	{0,255,64},
	{0,191,255},
	{0,127,255},
	{0,64,255},		
	{255,0,191},
	{255,0,127},
	{255,0,64},
	{191,0,255},
	{127,0,255},
	{64,0,255},
	{255,191,0},
	{255,127,0},
	{255,64,0},
	{191,255,0},
	{127,255,0},
	{64,255,0},
	{191,255,255},
	{127,255,255},
	{64,255,255},
	{255,191,255},
	{255,127,255},
	{255,64,255},
	{255,255,191},
	{255,255,127},
	{255,255,64},
	{255,191,191},
	{255,127,127},
	{255,64,64},
	{191,255,191},
	{127,255,127},
	{64,255,64},
	{191,191,255},
	{127,127,255},
	{64,64,255},
	{255,255,255},
	{191,191,191},
	{127,127,127},
	{64,64,64},						
	{0,0,0},
	{255,0,0},
	{191,0,0},
	{127,0,0},
	{64,0,0},
	{0,255,0},
	{0,191,0},
	{0,127,0},
	{0,64,0},
	{0,0,255},
	{0,0,191},
	{0,0,127},
	{0,0,64},
	{0,255,255},
	{0,191,191},
	{0,127,127},
	{0,64,64},
	{255,0,255},
	{191,0,191},
	{127,0,127},
	{64,0,64},
	{255,255,0},
	{191,191,0},
	{127,127,0},
	{64,64,0},
	{0,255,191},
	{0,255,127},
	{0,255,64},
	{0,191,255},
	{0,127,255},
	{0,64,255},
	{255,0,191},
	{255,0,127},
	{255,0,64},
	{191,0,255},
	{127,0,255},
	{64,0,255},
	{255,191,0},
	{255,127,0},
	{255,64,0},
	{191,255,0},
	{127,255,0},
	{64,255,0},
	{191,255,255},
	{127,255,255},
	{64,255,255},
	{255,191,255},
	{255,127,255},
	{255,64,255},
	{255,255,191},
	{255,255,127},
	{255,255,64},
	{255,191,191},
	{255,127,127},
	{255,64,64},
	{191,255,191},
	{127,255,127},
	{64,255,64},
	{191,191,255},
	{127,127,255},
	{64,64,255},
	{255,255,255},
	{191,191,191},
	{127,127,127},
	{64,64,64},
	{0,0,0}		
};
	
uint8_t cm[NUM_CALIB_MEAS][3];
float calib_result[3][3];

uint32_t last_msg;
uint8_t take_meas;
uint8_t curr_frame;
uint8_t stop_meas;