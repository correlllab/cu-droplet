// This API call can receive the motor settings value of another droplet remotely, without having to plug it in. 
// It is initiated by sending "read_motor_settings" from the terminal
//It is split into two functions so that it does not take too much block time and scheduler takes care of seeing it to completion.
void send_motor_settings_two_A(){
	MotorSettingsMsg msg;
	msg.flag = 'S';
	for(uint8_t i=0;i<4;i++){
		for(uint8_t j=0;j<3;j++){
			msg.settings[i][j] = motor_adjusts[i][j];
		}
	}
	ir_send(ALL_DIRS, (char*)&msg, sizeof(MotorSettingsMsg));
	schedule_task(200, send_motor_settings_two_B, NULL);
}

void send_motor_settings_two_B(){
	MotorSettingsMsg msg;
	msg.flag = 'T';
	for(uint8_t i=0;i<4;i++){
		for(uint8_t j=0;j<3;j++){
			msg.settings[i][j] = motor_adjusts[4+i][j];
		}
	}
	ir_send(ALL_DIRS, (char*)&msg, sizeof(MotorSettingsMsg));
}

//This function checks if the droplet is calibrated or not. Uncalibrated droplets have all "-1" in their motor settings values.
void check_if_motor_calibrated()
{
	int cnt=0;
	for(uint8_t direction=0;direction<8;direction++)
	{
		for(uint8_t motor=0;motor<3;motor++)
		{
			if(motor_adjusts[direction][motor]==(-1))
			cnt++;
		}
	}
	if(cnt>13)
	printf("Not calibrated\n\r");
	else
	printf("Calibrated\n\r");
}