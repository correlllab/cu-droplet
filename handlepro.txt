void handle_reprogramming(irMsg *msg_struct_hex)
{
	
	number_of_hex--;
	uint16_t startaddr[2];
	uint8_t Numberofbytes;
	char str[3], str1[5];
	int i=0;
	for(i=0; i<2; i++)
	{
		str[i] = msg_struct_hex->msg[i];
	}
	str[2] = '\0';
	Numberofbytes = strtoul(str, NULL, 16);
	//printf("Number of data bytes = %d\r\n", Numberofbytes);
	for(i=2; i<6; i++)
	{
		str1[i-2] = msg_struct_hex->msg[i];
	}
	str1[4] = '\0';
	 startaddr[0] = strtoul(str1, NULL, 16);
	 uint16_t addrstart = startaddr[0];
	//printf("page start : %u\n",addrstart);
	
	uint8_t FlashBuffer[Numberofbytes];
	uint32_t targetAddr =addrstart;
	
	if(number_of_hex == 2)
	{
		tgadd1 = addrstart;
	}
	nvm_flash_read_buffer(targetAddr, FlashBuffer, Numberofbytes);
	/*for(int j=0; j<Numberofbytes; j++)
	{
		printf("%02hx ", FlashBuffer[j]);

	}
	printf("\r\n");*/
	
	
	// keep on filling the buffer
	for(uint8_t i=6;i<(6+(2*Numberofbytes));i+=2)    // 0-5 are length and address, the last two char (1 byte) is for checksum
	{
		//convert pair of chars to byte.
		str[0] = msg_struct_hex->msg[i];
		str[1] = msg_struct_hex->msg[i+1];
		str[2] = '\0';
		FlashBuffer[flashBufferPos] = strtoul(str, NULL, 16);
		flashBufferPos = flashBufferPos + 1;
		// Converting string to hex value is done successfully
	}
	

	
		printf("About to write. Address: %lu    and line num : %d\r\n\r\n\r\n", targetAddr, number_of_hex);
		nvm_flash_erase_and_write_buffer(targetAddr, FlashBuffer, Numberofbytes, 1);
		
		nvm_flash_read_buffer(targetAddr, FlashBuffer, Numberofbytes);
		for(int j=0; j<Numberofbytes; j++)
		{
			printf("%02hx ", FlashBuffer[j]);
			if(j%16 == 0) printf("\r\n");
		}
		printf("\r\n");
		if(number_of_hex == 0)
		{
			reprogramming=0;
			dropletReboot();
			printf("Came in num hex is zero!!!!!!!!!!!!!!!!!!!!");
			printf("Done");
		}
}